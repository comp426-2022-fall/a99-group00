List of proposed endpoints for the api.
Will probably need to convert this doc to an OpenAPI specification doc sometime later.

As per project guidelines, api root endpoint must be at "http://HOST/app/"

* All endpoint outputs are in JSON Format

USERS endpoints
- GET "/app/users/:username"
    Get score of user

    Output Format:
        {
            exists: True/False (false if does not exist)
            user: {
                "username":"Alan",
                "number_attempts":8,
                "number_correct":7,
                "created_at":"2022-12-07T04:46:53.000Z",
                "updated_at":"2022-12-07T06:50:52.000Z"
            } //null if does not exist
        }

- POST "/app/users/:username"
    Creates user with input username

    Possible Outputs:
        // Success
        {
            status: 200,
            message: "${Username} was succesfully created"
        },
        // Failed (Bad Request error)
        {
            status: 400,
            message: "${Username} already exists"
        }


- DELETE "/app/users/:username"
    Deletes user with specified name

    Possible Outputs:
        // Success
        {
            status: 200,
            message: "${Username} was succesfully deleted"
        },
        // Failed (Bad Request error)
        {
            status: 400,
            message: "${Username} does not exist"
        }

- PATCH "/app/users/:username/correct"
    Increases both 'number_correct' and 'number_attempts' by 1.

    Possible Outputs:
        // Success
        {
            status: 200,
            message: "${Username} was succesfully updated."
        },
        // Failed (Bad Request error)
        {
            status: 400,
            message: "${Username} does not exist."
        }

- PATCH "/app/users/:username/incorrect"
    Increases only 'number_attempts' by 1.

    Possible Outputs:
        // Success
        {
            status: 200,
            message: "${Username} was succesfully updated."
        },
        // Failed (Bad Request error)
        {
            status: 400,
            message: "${Username} does not exist."
        }



- GET "/app/users/leaderboard"
    Get 5 top scoring users

    Output (List in JSON format):
        [
            {
                "username":"Alan",
                "number_attempts":8,
                "number_correct":7,
                "created_at":"2022-12-07T04:46:53.000Z",
                "updated_at":"2022-12-07T06:50:52.000Z"
            },
            {
                "username":"Alan2",
                "number_attempts":8,
                "number_correct":7,
                "created_at":"2022-12-07T04:46:53.000Z",
                "updated_at":"2022-12-07T06:50:52.000Z"
            },
            ....
            ....
        ]
